name: Publish to NPM

on:
  push:
    branches: [main, master]
  pull_request:
    types: [closed]
    branches: [main, master]

permissions:
  contents: write
  packages: read

jobs:
  publish:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run type-check

      - name: Build package
        run: npm run build

      - name: Check dist changes
        id: check_dist
        run: |
          # Check if there are any changes in the dist folder
          if git diff --quiet HEAD~1 HEAD -- dist/ 2>/dev/null || [ ! -d "dist" ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes detected in dist folder"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected in dist folder"
          fi

      - name: Get current version
        id: current_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Skip deployment notice
        if: steps.check_dist.outputs.changed == 'false'
        run: |
          echo "ðŸš« Skipping NPM deployment - no changes detected in dist folder"
          echo "Only committing code changes without publishing to NPM"

      - name: Check if version exists on npm
        if: steps.check_dist.outputs.changed == 'true'
        id: check_version
        run: |
          if npm view @homecheck/vue-canvas-highlighter@${{ steps.current_version.outputs.version }} version 2>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Auto increment version
        if: steps.check_dist.outputs.changed == 'true' && steps.check_version.outputs.exists == 'true'
        run: |
          npm version patch --no-git-tag-version
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        id: new_version

      - name: Publish to NPM
        if: steps.check_dist.outputs.changed == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_DEPLOY_TOKEN }}

      - name: Create git tag
        if: steps.check_dist.outputs.changed == 'true'
        run: |
          VERSION=${{ steps.new_version.outputs.version || steps.current_version.outputs.version }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        if: steps.check_dist.outputs.changed == 'true'
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.new_version.outputs.version || steps.current_version.outputs.version }}
          release_name: Release v${{ steps.new_version.outputs.version || steps.current_version.outputs.version }}
          body: |
            ## Changes
            - Auto-published from ${{ github.event.head_commit.message || github.event.pull_request.title }}
            
            ## Installation
            ```bash
            npm install @homecheck/vue-canvas-highlighter@${{ steps.new_version.outputs.version || steps.current_version.outputs.version }}
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 